[project]
name = "furbox"
version = "0.1.0"
description = "Python library for various furry media utilities"
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    "attrs>=25.3.0",
    "beautifulsoup4>=4.13.4",
    "cattrs>=25.1.1",
    "pyyaml>=6.0.2",
    "requests>=2.32.4",
    "rich>=14.1.0",
    "typing-extensions>=4.14.1",
]

[project.optional-dependencies]
dev = [
    "actionlint-py>=1.7.7.23",
    "flake8-annotations>=3.1.1",
    "flake8-docstrings>=1.7.0",
    "flake8-pyproject>=1.2.3",
    "flake8>=7.3.0",
    "pep8-naming>=0.15.1",
    "pre-commit>=4.2.0",
    "pydoclint>=0.6.6",
    "pytest-cov>=6.2.1",
    "pytest>=8.4.1",
    "ruff>=0.12.5",
    "yamlfix>=1.17.0",
    "zizmor>=1.11.0",
]

[project.scripts]
furbox = "furbox.main:main"

[build-system]
requires = ["setuptools>=80.9.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.yamlfix]  # YAML auto-formatter - https://lyz-code.github.io/yamlfix/
allow_duplicate_keys = true
line_length = 120
none_representation = "null"
indent_mapping = 4
indent_offset = 0
indent_sequence = 4
explicit_start = false
preserve_quotes = true

# Flake8 python linter - see https://github.com/PyCQA/flake8
# Using a plugin to support pyproject.toml - see https://github.com/john-hen/Flake8-pyproject
[tool.flake8]
max-line-length = 120

exclude = [
    "scripts",
]

extend-ignore = [
    "ANN002",  # Missing type annotation for *args
    "ANN003",  # Missing type annotation for **kwargs
    "ANN101",  # Missing type annotation for self in method
    "ANN102",  # Missing type annotation for cls in classmethod
    "CCE001",  # Wrong class attributes order
    "D104",    # Missing docstring in public package
    "D107",    # Missing docstring in __init__
    "D210",    # No whitespaces allowed surrounding docstring text
    "DOC601",  # Class docstring contains fewer class attributes than actual class attributes.
    "DOC603",  # Class docstring attributes are different from actual class attributes.
    "I201",    # Missing newline between import groups
    "T000",    # Todo note found
]

# Pydoclint config
style = "google"

# Consider furbox and tests as local packages
import-order-style = "edited"
application-import-names = [
    "furbox",
    "tests",
]

# Ruff python linter - see https://github.com/astral-sh/ruff
[tool.ruff]
line-length = 120

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint]
# Enable all linting options, then manually disable what is not required
select = ["ALL"]

ignore = [
#     # Disable whole sets of rules
    "FBT", # flake8-boolean-trap
    "G",   # flake8-logging-format
    "TD",  # flake8-todos

    "ANN002", # Missing type annotation for `*args`
    "ANN003", # Missing type annotation for `**kwargs`
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed

    "C901", # Structure is too complex

    "D104", # Missing docstring in public package
    "D107", # Missing docstring in `__init__`
    "D210", # No whitespaces allowed surrounding docstring text

    "FIX002", # Line contains TODO, consider resolving the issue

    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used in comparison

    "TRY003", # Avoid specifying long messages outside the exception class

    # TODO - Consider removing these ignores.
    "DTZ", # flake8-datetimez
    "EM",  # flake8-errmsg
    "S",   # flake8-bandit
    "T20", # flake8-print
    "BLE001", # Do not catch blind exception
    "PTH123", # `open()` should be replaced by `Path.open()` (TODO - Can eventually disable)
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
    "RUF013", # PEP 484 prohibits implicit Optional
    "SLF001", # Private member accessed
    "TRY301", # Abstract raise to an inner function
    "UP024", # Replace aliased errors with `OSError`
    "UP035", # Import from {target} instead: {names}
]

[tool.ruff.lint.isort]
# Enforces consistency with flake8 isort config
# See https://docs.astral.sh/ruff/settings/#lintisort
order-by-type = false

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "E402", # Module level import not at top of file
    "F401", # Module imported but unused
    "F811", # Redefinition of unused variable
    "RUF001", # String contains ambiguous character
    "S101", # Use of `assert` detected
    "S106", # Possible hardcoded password assigned to argument
    "SLF001", # Private member accessed
]

[tool.ruff.lint.pydocstyle]
convention = "google"
